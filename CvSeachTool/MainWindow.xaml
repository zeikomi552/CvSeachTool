<mah:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Converters="clr-namespace:CvSeachTool.Common.Converters"
        xmlns:enum="clr-namespace:CvSeachTool.Common.Enums"
        xmlns:local="clr-namespace:CvSeachTool"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" xmlns:ViewModels="clr-namespace:CvSeachTool.ViewModels" x:Class="CvSeachTool.MainWindow"
        mc:Ignorable="d"
        Title="CvSeachTool" Height="800" Width="1200" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <ViewModels:MainWindowVM/>
    </Window.DataContext>
    <Window.Resources>
        <Converters:ConvertBooleanConverter x:Key="ConvertBooleanConverter"/>
        <Converters:URLStringToImageSourceConverter x:Key="URLStringToImageSourceConverter"/>
        <Converters:ImageNsfwEnumToVisibilityConverter x:Key="ImageNsfwEnumToVisibilityConverter"/>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ModelTypeEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ModelTypeEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ModelPeriodEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ModelPeriodEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ModelSortEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ModelSortEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ModelAllowCommercialUseEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ModelAllowCommercialUseEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ImageNsfwEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:ImageNsfwEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger>
            <b:CallMethodAction TargetObject="{Binding}" MethodName="Init"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <materialDesign:ColorZone Mode="PrimaryLight">
            <GroupBox Margin="5" Header="Condition">
                <Expander Background="{x:Null}" IsExpanded="True" Margin="0, -50, 0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer Height="120" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                            <WrapPanel Orientation="Vertical" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Limit"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="80" Margin="5" Text="{Binding GetCondition.Limit}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Page"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="100" Margin="5" Text="{Binding GetCondition.Page}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Query"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="100" Margin="5" Text="{Binding GetCondition.Query}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Tag"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="100" Margin="5" Text="{Binding GetCondition.Tag}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Username"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="100" Margin="5" Text="{Binding GetCondition.Username}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Types"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <ComboBox Width="100" SelectedItem="{Binding GetCondition.Types, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" 
                                                    ItemsSource="{Binding Mode=OneWay, Source={StaticResource ModelTypeEnum}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Sort"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <ComboBox Width="100" SelectedItem="{Binding GetCondition.Sort, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" 
                                                    ItemsSource="{Binding Mode=OneWay, Source={StaticResource ModelSortEnum}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Period"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <ComboBox Width="100" SelectedItem="{Binding GetCondition.Period, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" 
                                                    ItemsSource="{Binding Mode=OneWay, Source={StaticResource ModelPeriodEnum}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Rating"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <TextBox Width="100" Margin="5" Text="{Binding GetCondition.Rating}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Favorites"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.Favorites}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Hidden"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.Hidden}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="PrimaryFileOnly"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.PrimaryFileOnly}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="AllowNoCredit"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.AllowNoCredit}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="AllowDerivatives"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.AllowDerivatives}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="AllowDifferentLicenses"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.AllowDifferentLicenses}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="AllowCommercialUse"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <ComboBox Width="100" SelectedItem="{Binding GetCondition.AllowCommercialUse, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" 
                                                    ItemsSource="{Binding Mode=OneWay, Source={StaticResource ModelAllowCommercialUseEnum}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Width="120" TextAlignment="Right" VerticalAlignment="Center" Margin="5" Text="Nsfw"/>
                                    <TextBlock VerticalAlignment="Center" Margin="5" Text=":"/>
                                    <CheckBox Width="100" Margin="5" IsChecked="{Binding GetCondition.Nsfw}" IsThreeState="True" VerticalAlignment="Center"/>
                                </StackPanel>

                            </WrapPanel>
                        </ScrollViewer>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Button Margin="5" IsEnabled="{Binding ExecuteGetAPI, Converter={StaticResource ConvertBooleanConverter}}" Cursor="Hand">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:CallMethodAction TargetObject="{Binding}" MethodName="GETQuery"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <StackPanel Orientation="Vertical">
                                    <svgc:SvgViewbox Source="/Common/Images/search-file-svgrepo-com.svg" />
                                </StackPanel>
                            </Button>
                            <TextBlock VerticalAlignment="Center" Text="{Binding CvsModel.RequestURL}"/>
                            
                        </StackPanel>
                    </Grid>
                </Expander>
            </GroupBox>
        </materialDesign:ColorZone>

        <GroupBox Margin="5" Header="Results" Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="dgModel" Margin="5" IsReadOnly="True" ItemsSource="{Binding CvsModel.Items.Items}" 
                                  SelectedItem="{Binding CvsModel.Items.SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                    <!-- (B) -->
                                    <Setter Property="MaxHeight" Value="50" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="name" Width="100" Binding="{Binding Name}"/>
                                <DataGridTextColumn Header="type" Binding="{Binding Type}"/>
                                <DataGridTextColumn Header="nsfw" Binding="{Binding Nsfw}"/>
                                <DataGridTextColumn Header="allowCommercialUse" Binding="{Binding AllowCommercialUse}"/>
                                <DataGridTextColumn Header="stats.downloadCount" Binding="{Binding Stats.DownloadCount}"/>
                                <DataGridTextColumn Header="stats.favoriteCount" Binding="{Binding Stats.FavoriteCount}"/>
                                <DataGridTextColumn Header="stats.commentCount" Binding="{Binding Stats.CommentCount}"/>
                                <DataGridTextColumn Header="stats.ratingCount" Binding="{Binding Stats.RatingCount}"/>
                                <DataGridTextColumn Header="stats.rating" Binding="{Binding Stats.Rating}"/>
                                <DataGridTextColumn Header="creator.username" Binding="{Binding Creator.Username}"/>
                                <!--<DataGridTextColumn Header="creator.image" Binding="{Binding Creator.Image}"/>-->
                                <DataGridTextColumn Width="150" Header="description" Binding="{Binding Description}"/>
                                <DataGridTextColumn Header="mode" Binding="{Binding Mode}"/>
                            </DataGrid.Columns>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseDoubleClick">
                                    <b:CallMethodAction TargetObject="{Binding}" MethodName="OpenURL"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="SelectionChanged">
                                    <b:CallMethodAction TargetObject="{Binding}" MethodName="ModelSelectionChanged"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </DataGrid>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Width="50" Margin="5" IsEnabled="{Binding ExecuteGetAPI, Converter={StaticResource ConvertBooleanConverter}}">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:CallMethodAction TargetObject="{Binding}" MethodName="MovePrev"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <StackPanel Orientation="Vertical">
                                    <svgc:SvgViewbox Height="25" Source="/Common/Images/arrowleft-svgrepo-com.svg" />
                                </StackPanel>

                            </Button>
                            <TextBlock Margin="5" Text="{Binding CvsModel.Metadata.CurrentPage}" TextAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Margin="5" Text="/" TextAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Margin="5" Text="{Binding CvsModel.Metadata.TotalPages}" TextAlignment="Center" VerticalAlignment="Center"/>
                            <Button Width="50" Margin="5" IsEnabled="{Binding ExecuteGetAPI, Converter={StaticResource ConvertBooleanConverter}}" Cursor="Hand">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:CallMethodAction TargetObject="{Binding}" MethodName="MoveNext"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <StackPanel Orientation="Vertical">
                                    <svgc:SvgViewbox Height="25" Source="/Common/Images/arrowright-svgrepo-com.svg" />
                                </StackPanel>

                            </Button>
                            <Button Width="50" Margin="5" Cursor="Hand">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:CallMethodAction TargetObject="{Binding}" MethodName="AddBookmark"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <StackPanel Orientation="Vertical">
                                    <svgc:SvgViewbox Height="25" Source="/Common/Images/bookmark-svgrepo-com.svg" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        <DataGrid x:Name="dgModelVersions" MaxHeight="150" Grid.Row="2" Margin="5" IsReadOnly="True" ItemsSource="{Binding CvsModel.Items.SelectedItem.ModelVersions}" 
                                  SelectedItem="{Binding CvsModel.Items.SelectedItem.SelectedModelVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  AutoGenerateColumns="False">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <!-- (B) -->
                                    <Setter Property="Height" Value="50" />
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="name" Binding="{Binding Name}"/>
                                <DataGridTextColumn Header="createdAt" Binding="{Binding CreatedAt}"/>
                                <DataGridTextColumn Header="downloadUrl" Binding="{Binding DownloadUrl}"/>
                                <DataGridTextColumn Header="trainedWords" Binding="{Binding TrainedWords}"/>
                                <DataGridTextColumn Width="300" Header="description" Binding="{Binding Description}"/>
                            </DataGrid.Columns>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseDoubleClick">
                                    <b:CallMethodAction TargetObject="{Binding}" MethodName="OpenURLModelVersion"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="SelectionChanged">
                                    <b:CallMethodAction TargetObject="{Binding}" MethodName="ModelVersionSelectionChanged"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                        </DataGrid>


                    </Grid>
                    <Grid Margin="5" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition MaxHeight="200" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Text="Filter : "/>
                            <ComboBox VerticalAlignment="Center" Width="100" SelectedItem="{Binding ImageFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    ItemsSource="{Binding Mode=OneWay, Source={StaticResource ImageNsfwEnum}}">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="SelectionChanged">
                                        <b:CallMethodAction TargetObject="{Binding ImageList, Mode=TwoWay}" MethodName="RefreshFilter"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>

                        <ListView Grid.Row="1" x:Name="lvImages" ItemsSource="{Binding ImageList.FilteredImages}" SelectedItem="{Binding ImageList.SelectedImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.Template>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <Border BorderThickness="5">
                                        <ScrollViewer>
                                            <ItemsPresenter Margin="5"/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Visibility="{Binding Nsfw, Converter={StaticResource ImageNsfwEnumToVisibilityConverter}}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="[Model]"/>
                                            <TextBlock Text="{Binding Meta.Model}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="[Model hash]"/>
                                            <TextBlock Text="{Binding Meta.ModelHash}"/>
                                        </StackPanel>
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="[Size]"/>
                                                <TextBlock Text="{Binding Meta.Size}"/>
                                                <TextBlock Text=" "/>
                                                <TextBlock Text="[Sampler]"/>
                                                <TextBlock Text="{Binding Meta.Sampler}"/>
                                                <TextBlock Text=" "/>
                                                <TextBlock Text="[Seed]"/>
                                                <TextBlock Text="{Binding Meta.Seed}"/>
                                            </StackPanel>
                                        </StackPanel>
                                        <Image Width="400" Source="{Binding Url, Converter={StaticResource URLStringToImageSourceConverter}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" TextAlignment="Right" Text="Prompt:"/>
                                <TextBox VerticalAlignment="Center" Grid.Column="1" IsReadOnly="True" Margin="5"
                                         TextAlignment="Center" Text="{Binding  ImageList.SelectedImage.Meta.Prompt}"/>
                                <Button Grid.Column="2" Margin="5">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Click">
                                            <b:CallMethodAction TargetObject="{Binding ImageList.SelectedImage.Meta}" MethodName="CopyClipbordPrompt"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <StackPanel Orientation="Vertical">
                                        <svgc:SvgViewbox Source="/Common/Images/copy-1-svgrepo-com.svg" />
                                    </StackPanel>

                                </Button>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" TextAlignment="Right" Text="NegativPrompt:"/>
                                <TextBox VerticalAlignment="Center" Grid.Column="1" IsReadOnly="True" Margin="5" TextAlignment="Center"
                                         Text="{Binding ImageList.SelectedImage.Meta.NegativPrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button Grid.Column="2" Margin="5" Cursor="Hand">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Click">
                                            <b:CallMethodAction TargetObject="{Binding ImageList.SelectedImage.Meta}" MethodName="CopyClipbordNegativePrompt"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <StackPanel Orientation="Vertical">
                                        <svgc:SvgViewbox Source="/Common/Images/copy-1-svgrepo-com.svg" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </GroupBox>
        <materialDesign:ColorZone Grid.Row="2" Height="auto" Padding="5" Mode="PrimaryLight">
            <DockPanel>
                <StackPanel Orientation="Horizontal">
                    <Button Margin="5" Width="auto" Height="auto">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding}" MethodName="Output"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <svgc:SvgViewbox Source="/Common/Images/markdown-svgrepo-com.svg" />
                        </StackPanel>
                    </Button>
                    <Button Margin="5" Width="auto" Height="auto">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding}" MethodName="Output3"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <svgc:SvgViewbox Source="/Common/Images/markdown-svgrepo-com.svg" />
                        </StackPanel>
                    </Button>
                    <Button Margin="5" Width="auto" Height="auto">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding}" MethodName="Output2"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <svgc:SvgViewbox Source="/Common/Images/markdown-svgrepo-com.svg" />
                        </StackPanel>
                    </Button>
                    <Button Margin="5" Width="auto" Cursor="Hand">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding}" MethodName="ImageFileRead"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <svgc:SvgViewbox Source="/Common/Images/lens-svgrepo-com.svg" />
                        </StackPanel>
                    </Button>
                    <Button Margin="5" Height="auto" Width="auto" Cursor="Hand">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:CallMethodAction TargetObject="{Binding}" MethodName="OpenBookmarkV"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <StackPanel Orientation="Vertical">
                            <svgc:SvgViewbox Height="25" Source="/Common/Images/bookmark-svgrepo-com.svg" />
                        </StackPanel>
                    </Button>

                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>

    </Grid>
</mah:MetroWindow>
